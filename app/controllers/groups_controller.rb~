class GroupsController < ApplicationController
before_filter :authenticate_user!
before_filter :is_group_lead, :only => [:remove]

  def show
      @group = Group.find(params[:id])
      if @group.category == "class"
         @papers = []
         @classdates = []
         @general = []
         # Create a hash of papers
         @group.papers.each do |p|
           @papers[p.id] = p
         end

         # Create a list of instructors
         @instructors = @group.memberships.all.select{|m| m.lead}.map{|m| m.user}
 
         # Create a list of classdates and sort by date.
         @group.filters.all.each do |f|
           if f.paper_id != nil && f.date != nil
             @classdates << [f.paper_id, f.date, f.supplementary]
           elsif f.date.nil? && f.paper_id != nil
             @general << f.paper
           end
         end
         @classdates.sort!{|x,y| x[1] + x[2].object_id.minutes <=> y[1] + y[2].object_id.minutes}
      end
      
      
      respond_to do |format|
      format.html
      end
  end

  def remove
	@group = Group.find(params[:id])
	@user = User.find(params[:user])
	@group.remove(@user)
	flash[:success] = @user.name + " has been removed from " + @group.name
	redirect_to root_path
  end

private
   def is_group_lead
	@group = Group.find(params[:id])
	@group.leads.include?(current_user)
   end
   

end
